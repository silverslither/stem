export function wilson(wins = 0, losses = 0, draws = 0, z = 1.9599639845400543) {
    const total = wins + losses + draws;

    if (total === 0)
        return [0, 0];

    const z_squared = z ** 2;

    const p = (wins + draws / 2) / total;

    const z_squared_over_total = z_squared / total;
    const avg = p + 0.5 * z_squared_over_total;
    const err = z * Math.sqrt((p * (1 - p) + 0.25 * z_squared_over_total) / total);
    const mul = 1 + z_squared_over_total;

    return [
        Math.max(0, (avg - err) / mul),
        Math.min(1, (avg + err) / mul)
    ];
}

export function z_value(alpha) {
    return Math.SQRT2 * erfinv(1 - alpha);
}

function erfinv(x) {
    let w = -Math.log((1 - x) * (1 + x));
    let p;

    if (w < 6.25) {
        w -= 3.125;
        p = -3.64441206401782e-21;
        p = -1.6850591381820166e-19 + p * w;
        p = 1.28584807152564e-18 + p * w;
        p = 1.1157877678025181e-17 + p * w;
        p = -1.333171662854621e-16 + p * w;
        p = 2.0972767875968562e-17 + p * w;
        p = 6.637638134358324e-15 + p * w;
        p = -4.054566272975207e-14 + p * w;
        p = -8.151934197605472e-14 + p * w;
        p = 2.6335093153082323e-12 + p * w;
        p = -1.2975133253453532e-11 + p * w;
        p = -5.415412054294628e-11 + p * w;
        p = 1.0512122733215323e-9 + p * w;
        p = -4.112633980346984e-9 + p * w;
        p = -2.9070369957882005e-8 + p * w;
        p = 4.2347877827932404e-7 + p * w;
        p = -0.0000013654692000834679 + p * w;
        p = -0.000013882523362786469 + p * w;
        p = 0.00018673420803405714 + p * w;
        p = -0.000740702534166267 + p * w;
        p = -0.006033670871430149 + p * w;
        p = 0.24015818242558962 + p * w;
        p = 1.6536545626831027 + p * w;
    } else if (w < 16) {
        w = Math.sqrt(w) - 3.25;
        p = 2.2137376921775787e-9;
        p = 9.075656193888539e-8 + p * w;
        p = -2.7517406297064545e-7 + p * w;
        p = 1.8239629214389228e-8 + p * w;
        p = 0.0000015027403968909828 + p * w;
        p = -0.000004013867526981546 + p * w;
        p = 0.0000029234449089955446 + p * w;
        p = 0.000012475304481671779 + p * w;
        p = -0.000047318229009055734 + p * w;
        p = 0.00006828485145957318 + p * w;
        p = 0.000024031110387097894 + p * w;
        p = -0.0003550375203628475 + p * w;
        p = 0.0009532893797373805 + p * w;
        p = -0.0016882755560235047 + p * w;
        p = 0.002491442096107851 + p * w;
        p = -0.003751208507569241 + p * w;
        p = 0.005370914553590064 + p * w;
        p = 1.0052589676941592 + p * w;
        p = 3.0838856104922208 + p * w;
    } else {
        w = Math.sqrt(w) - 5;
        p = -2.7109920616438573e-11;
        p = -2.555641816996525e-10 + p * w;
        p = 1.5076572693500548e-9 + p * w;
        p = -3.789465440126737e-9 + p * w;
        p = 7.61570120807834e-9 + p * w;
        p = -1.496002662714924e-8 + p * w;
        p = 2.914795345090108e-8 + p * w;
        p = -6.771199775845234e-8 + p * w;
        p = 2.2900482228026655e-7 + p * w;
        p = -9.9298272942317e-7 + p * w;
        p = 0.000004526062597223154 + p * w;
        p = -0.00001968177810553167 + p * w;
        p = 0.00007599527703001776 + p * w;
        p = -0.00021503011930044477 + p * w;
        p = -0.00013871931833623122 + p * w;
        p = 1.0103004648645344 + p * w;
        p = 4.849906401408584 + p * w;
    }

    return p * x;
}